# To-Do List
# Create a simple to-do list application where users can add, remove, and mark
# tasks as complete. This project will help you practice working with lists and user
# input.

# Here are different statuses for a task along with brief explanations for each:
#   Pending:        The task has been created but not yet started. It is awaiting action.
#   In Progress:    Work on the task has begun. It is currently being worked on and is not yet complete.
#   Completed:      The task has been finished successfully. No further action is required.
#   On Hold:        The task is temporarily paused. It may be due to dependencies, waiting for external inputs, or prioritization of other tasks.
#   Cancelled:      The task is no longer required or has been abandoned. It will not be completed.
#   Deferred:       The task has been postponed to a later time. It is not currently a priority but will be revisited in the future.
#   Failed:         The task has been attempted but could not be completed successfully. It may need reassessment or reallocation.In Progress:


# Code generated by ChatGPT
# https://chatgpt.com/share/b9b6b43c-60d4-484e-a1e2-20c93971737b

import json


# Function to load tasks from a file
def load_tasks(filename):
    try:
        with open(filename, 'r') as file:
            tasks = json.load(file)
    except FileNotFoundError:
        tasks = []
    return tasks


# Function to save tasks to a file
def save_tasks(tasks, filename):
    with open(filename, 'w') as file:
        json.dump(tasks, file)


# Function to display the menu
def display_menu():
    print("To-Do List Menu:")
    print("1. View all the tasks")
    print("2. Add a new task")
    print("3. Update a task")
    print("4. Delete a task")
    print("5. Exit")


# Function to view tasks
def view_tasks(tasks):
    if not tasks:
        print("No tasks in the to-do list.")
    else:
        for i, task in enumerate(tasks):
            print(f"{i + 1}. {task[0]} - Status: {task[1]}")


# Function to add a task
def add_task(tasks):
    task = input("Enter the task: ")
    tasks.append([task, "PENDING"])
    print("Task added.")


# Function to delete a task
def delete_task(tasks):
    view_tasks(tasks)
    task_number = int(input("Enter the task number to delete: "))
    if 0 < task_number <= len(tasks):
        tasks.pop(task_number - 1)
        print("Task deleted.")
    else:
        print("Invalid task number.")

def update_task(tasks):
    view_tasks(tasks)
    task_number = int(input("Enter the task number to update: "))
    if 0 < task_number <= len(tasks):
        print("Select the new status by number:")
        print("1. Pending")
        print("2. In Progress")
        print("3. Completed")
        print("4. On Hold")
        print("5. Cancelled")
        print("6. Deferred")
        print("7. Failed")
        new_status = int(input("New status: "))

        status_dict = {
            1: "PENDING",
            2: "IN PROGRESS",
            3: "COMPLETED",
            4: "ON HOLD",
            5: "CANCELLED",
            6: "DEFERRED",
            7: "FAILED"
        }

        tasks[task_number-1][1] = status_dict[new_status]
        print("Task updated.")
    else:
        print("Invalid task number.")

def main():
    filename = "tasks.json"
    tasks = load_tasks(filename)

    while True:
        display_menu()
        choice = input("Enter your choice: ")

        if choice == '1':
            view_tasks(tasks)
        elif choice == '2':
            add_task(tasks)
            save_tasks(tasks, filename)
        elif choice == '3':
            update_task(tasks)
            save_tasks(tasks, filename)
        elif choice == '4':
            delete_task(tasks)
            save_tasks(tasks, filename)
        elif choice == '5':
            break
        else:
            print("Invalid choice. Please try again.")


if __name__ == "__main__":
    main()
